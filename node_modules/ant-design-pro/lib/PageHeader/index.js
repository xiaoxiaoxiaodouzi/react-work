'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _breadcrumb = require('antd/lib/breadcrumb');

var _breadcrumb2 = _interopRequireDefault(_breadcrumb);

var _tabs = require('antd/lib/tabs');

var _tabs2 = _interopRequireDefault(_tabs);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

exports.getBreadcrumb = getBreadcrumb;

require('antd/lib/breadcrumb/style/css');

require('antd/lib/tabs/style/css');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _pathToRegexp = require('path-to-regexp');

var _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _pathTools = require('../_utils/pathTools');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = {
  'pageHeader': 'antd-pro-page-header-pageHeader',
  'detail': 'antd-pro-page-header-detail',
  'row': 'antd-pro-page-header-row',
  'breadcrumb': 'antd-pro-page-header-breadcrumb',
  'tabs': 'antd-pro-page-header-tabs',
  'ant-tabs-bar': 'antd-pro-page-header-ant-tabs-bar',
  'logo': 'antd-pro-page-header-logo',
  'title': 'antd-pro-page-header-title',
  'action': 'antd-pro-page-header-action',
  'ant-btn-group': 'antd-pro-page-header-ant-btn-group',
  'ant-btn': 'antd-pro-page-header-ant-btn',
  'content': 'antd-pro-page-header-content',
  'extraContent': 'antd-pro-page-header-extraContent',
  'main': 'antd-pro-page-header-main'
};
var TabPane = _tabs2.default.TabPane;
function getBreadcrumb(breadcrumbNameMap, url) {
  var breadcrumb = breadcrumbNameMap[url];
  if (!breadcrumb) {
    Object.keys(breadcrumbNameMap).forEach(function (item) {
      if ((0, _pathToRegexp2.default)(item).test(url)) {
        breadcrumb = breadcrumbNameMap[item];
      }
    });
  }
  return breadcrumb || {};
}

var PageHeader = (_temp2 = _class = function (_PureComponent) {
  _inherits(PageHeader, _PureComponent);

  function PageHeader() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, PageHeader);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PageHeader.__proto__ || Object.getPrototypeOf(PageHeader)).call.apply(_ref, [this].concat(args))), _this), _this.onChange = function (key) {
      if (_this.props.onTabChange) {
        _this.props.onTabChange(key);
      }
    }, _this.getBreadcrumbProps = function () {
      return {
        routes: _this.props.routes || _this.context.routes,
        params: _this.props.params || _this.context.params,
        routerLocation: _this.props.location || _this.context.location,
        breadcrumbNameMap: _this.props.breadcrumbNameMap || _this.context.breadcrumbNameMap
      };
    }, _this.conversionFromProps = function () {
      var _this$props = _this.props,
          breadcrumbList = _this$props.breadcrumbList,
          breadcrumbSeparator = _this$props.breadcrumbSeparator,
          _this$props$linkEleme = _this$props.linkElement,
          linkElement = _this$props$linkEleme === undefined ? 'a' : _this$props$linkEleme;

      return _react2.default.createElement(
        _breadcrumb2.default,
        { className: styles.breadcrumb, separator: breadcrumbSeparator },
        breadcrumbList.map(function (item) {
          return _react2.default.createElement(
            _breadcrumb2.default.Item,
            { key: item.title },
            item.href ? (0, _react.createElement)(linkElement, _defineProperty({}, linkElement === 'a' ? 'href' : 'to', item.href), item.title) : item.title
          );
        })
      );
    }, _this.conversionFromLocation = function (routerLocation, breadcrumbNameMap) {
      var _this$props2 = _this.props,
          breadcrumbSeparator = _this$props2.breadcrumbSeparator,
          _this$props2$linkElem = _this$props2.linkElement,
          linkElement = _this$props2$linkElem === undefined ? 'a' : _this$props2$linkElem;
      // Convert the url to an array

      var pathSnippets = (0, _pathTools.urlToList)(routerLocation.pathname);
      // Loop data mosaic routing
      var extraBreadcrumbItems = pathSnippets.map(function (url, index) {
        var currentBreadcrumb = getBreadcrumb(breadcrumbNameMap, url);
        var isLinkable = index !== pathSnippets.length - 1 && currentBreadcrumb.component;
        return currentBreadcrumb.name && !currentBreadcrumb.hideInBreadcrumb ? _react2.default.createElement(
          _breadcrumb2.default.Item,
          { key: url },
          (0, _react.createElement)(isLinkable ? linkElement : 'span', _defineProperty({}, linkElement === 'a' ? 'href' : 'to', url), currentBreadcrumb.name)
        ) : null;
      });
      // Add home breadcrumbs to your head
      extraBreadcrumbItems.unshift(_react2.default.createElement(
        _breadcrumb2.default.Item,
        { key: 'home' },
        (0, _react.createElement)(linkElement, _defineProperty({}, linkElement === 'a' ? 'href' : 'to', '/'), '首页')
      ));
      return _react2.default.createElement(
        _breadcrumb2.default,
        { className: styles.breadcrumb, separator: breadcrumbSeparator },
        extraBreadcrumbItems
      );
    }, _this.conversionBreadcrumbList = function () {
      var _this$props3 = _this.props,
          breadcrumbList = _this$props3.breadcrumbList,
          breadcrumbSeparator = _this$props3.breadcrumbSeparator;

      var _this$getBreadcrumbPr = _this.getBreadcrumbProps(),
          routes = _this$getBreadcrumbPr.routes,
          params = _this$getBreadcrumbPr.params,
          routerLocation = _this$getBreadcrumbPr.routerLocation,
          breadcrumbNameMap = _this$getBreadcrumbPr.breadcrumbNameMap;

      if (breadcrumbList && breadcrumbList.length) {
        return _this.conversionFromProps();
      }
      // 如果传入 routes 和 params 属性
      // If pass routes and params attributes
      if (routes && params) {
        return _react2.default.createElement(_breadcrumb2.default, {
          className: styles.breadcrumb,
          routes: routes.filter(function (route) {
            return route.breadcrumbName;
          }),
          params: params,
          itemRender: _this.itemRender,
          separator: breadcrumbSeparator
        });
      }
      // 根据 location 生成 面包屑
      // Generate breadcrumbs based on location
      if (routerLocation && routerLocation.pathname) {
        return _this.conversionFromLocation(routerLocation, breadcrumbNameMap);
      }
      return null;
    }, _this.itemRender = function (route, params, routes, paths) {
      var _this$props$linkEleme2 = _this.props.linkElement,
          linkElement = _this$props$linkEleme2 === undefined ? 'a' : _this$props$linkEleme2;

      var last = routes.indexOf(route) === routes.length - 1;
      return last || !route.component ? _react2.default.createElement(
        'span',
        null,
        route.breadcrumbName
      ) : (0, _react.createElement)(linkElement, {
        href: paths.join('/') || '/',
        to: paths.join('/') || '/'
      }, route.breadcrumbName);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }
  // Generated according to props

  /**
   * 将参数转化为面包屑
   * Convert parameters into breadcrumbs
   */

  // 渲染Breadcrumb 子节点
  // Render the Breadcrumb child node


  _createClass(PageHeader, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          title = _props.title,
          logo = _props.logo,
          action = _props.action,
          content = _props.content,
          extraContent = _props.extraContent,
          tabList = _props.tabList,
          className = _props.className,
          tabActiveKey = _props.tabActiveKey,
          tabDefaultActiveKey = _props.tabDefaultActiveKey,
          tabBarExtraContent = _props.tabBarExtraContent;

      var clsString = (0, _classnames2.default)(styles.pageHeader, className);
      var breadcrumb = this.conversionBreadcrumbList();
      var activeKeyProps = {};
      if (tabDefaultActiveKey !== undefined) {
        activeKeyProps.defaultActiveKey = tabDefaultActiveKey;
      }
      if (tabActiveKey !== undefined) {
        activeKeyProps.activeKey = tabActiveKey;
      }

      return _react2.default.createElement(
        'div',
        { className: clsString },
        breadcrumb,
        _react2.default.createElement(
          'div',
          { className: styles.detail },
          logo && _react2.default.createElement(
            'div',
            { className: styles.logo },
            logo
          ),
          _react2.default.createElement(
            'div',
            { className: styles.main },
            _react2.default.createElement(
              'div',
              { className: styles.row },
              title && _react2.default.createElement(
                'h1',
                { className: styles.title },
                title
              ),
              action && _react2.default.createElement(
                'div',
                { className: styles.action },
                action
              )
            ),
            _react2.default.createElement(
              'div',
              { className: styles.row },
              content && _react2.default.createElement(
                'div',
                { className: styles.content },
                content
              ),
              extraContent && _react2.default.createElement(
                'div',
                { className: styles.extraContent },
                extraContent
              )
            )
          )
        ),
        tabList && tabList.length && _react2.default.createElement(
          _tabs2.default,
          _extends({
            className: styles.tabs
          }, activeKeyProps, {
            onChange: this.onChange,
            tabBarExtraContent: tabBarExtraContent
          }),
          tabList.map(function (item) {
            return _react2.default.createElement(TabPane, { tab: item.tab, key: item.key });
          })
        )
      );
    }
  }]);

  return PageHeader;
}(_react.PureComponent), _class.contextTypes = {
  routes: _propTypes2.default.array,
  params: _propTypes2.default.object,
  location: _propTypes2.default.object,
  breadcrumbNameMap: _propTypes2.default.object
}, _temp2);
exports.default = PageHeader;